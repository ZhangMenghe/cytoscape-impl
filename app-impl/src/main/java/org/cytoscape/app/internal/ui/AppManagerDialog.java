package org.cytoscape.app.internal.ui;

/*
 * #%L
 * Cytoscape App Impl (app-impl)
 * $Id:$
 * $HeadURL:$
 * %%
 * Copyright (C) 2008 - 2013 The Cytoscape Consortium
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as 
 * published by the Free Software Foundation, either version 2.1 of the 
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Lesser Public License for more details.
 * 
 * You should have received a copy of the GNU General Lesser Public 
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/lgpl-2.1.html>.
 * #L%
 */

import org.cytoscape.app.internal.event.AppsChangedEvent;
import org.cytoscape.app.internal.event.AppsChangedListener;
import org.cytoscape.app.internal.manager.AppManager;
import org.cytoscape.app.internal.ui.downloadsites.DownloadSitesManager;
import org.cytoscape.app.internal.ui.downloadsites.ManageDownloadSitesDialog;
import org.cytoscape.util.swing.FileUtil;
import org.cytoscape.work.TaskManager;

/**
 * This class represents the App Manager dialog window. Its UI setup code is generated by the Netbeans 7 GUI builder.
 */
public class AppManagerDialog extends javax.swing.JDialog {

	private CheckForUpdatesPanel checkForUpdatesPanel;
    private CurrentlyInstalledAppsPanel currentlyInstalledAppsPanel;
    private InstallAppsPanel installAppsPanel;
    private javax.swing.JTabbedPane mainTabbedPane;

    private ManageDownloadSitesDialog manageDownloadSitesDialog;
    private DownloadSitesManager downloadSitesManager;
    
    private AppManager appManager;
	private FileUtil fileUtil;
	private TaskManager taskManager;
    
    public AppManagerDialog(AppManager appManager, 
    		DownloadSitesManager downloadSitesManager,
    		FileUtil fileUtil, 
    		TaskManager taskManager, 
    		java.awt.Frame parent, 
    		boolean modal) {
        super(parent, modal);
        
        this.appManager = appManager;
        this.downloadSitesManager = downloadSitesManager;
        this.fileUtil = fileUtil;
        this.taskManager = taskManager;
        initComponents();
        
        // Create new manage download sites dialog
        manageDownloadSitesDialog = new ManageDownloadSitesDialog(
        		parent, true, downloadSitesManager);
        manageDownloadSitesDialog.setLocationRelativeTo(this);
        
        this.setLocationRelativeTo(parent);
    }
   
    private void initComponents() {
    	mainTabbedPane = new javax.swing.JTabbedPane();
        installAppsPanel = new InstallAppsPanel(appManager, downloadSitesManager, fileUtil, taskManager, this);
        currentlyInstalledAppsPanel = new CurrentlyInstalledAppsPanel(appManager);
        checkForUpdatesPanel = new CheckForUpdatesPanel(appManager, downloadSitesManager, taskManager, this);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("App Manager");
        
        mainTabbedPane.addTab("Install Apps", installAppsPanel);
        mainTabbedPane.addTab("Currently Installed", currentlyInstalledAppsPanel);
        mainTabbedPane.addTab("Check for Updates", checkForUpdatesPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                .addContainerGap())
        );
        
        pack();
    }
    
    public void changeTab(int index) {
    	mainTabbedPane.setSelectedIndex(index);
    }
    
    public void showManageDownloadSitesDialog() {
    	if (manageDownloadSitesDialog != null) {
    		manageDownloadSitesDialog.setLocationRelativeTo(this);
    		manageDownloadSitesDialog.setVisible(true);
    	}
    }
}
